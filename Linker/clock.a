;/*****************************************************
;Project : clock
;Version : 1
;Date    : 22.07.2019
;
;Chip type               : ATmega8
;Program type            : Application
;AVR Core Clock frequency: 4,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;
;const unsigned char time_backlight=10;

	.DSEG
;
;
;typedef unsigned char byte;
;
;register unsigned char hour=0 ,min=0, sec=0, ukd=0, hour1=0, min1=0,
;ukd1=0, charge=0, menu=0,timelight;
;
;register bit clockon=0,on=0,light=1,menustart=0,show=1;
;
;flash unsigned char chis[10]={48,49,50,51,52,53,54,55,56,57};
;
;flash unsigned char *dday[7]={"Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"};
;
;flash byte char0[8] = {
;	0b01110,
;	0b10001,
;	0b10001,
;	0b10001,
;	0b10001,
;	0b11111,
;	0b11111,
;	0b11111
;};
;//заряд мало
;
;flash byte char1[8] = {
;	0b01110,
;	0b10001,
;	0b10001,
;	0b11111,
;	0b11111,
;	0b11111,
;	0b11111,
;	0b11111
;};
;//заряд средне
;
;flash byte char2[8] = {
;	0b01110,
;	0b11111,
;	0b11111,
;	0b11111,
;	0b11111,
;	0b11111,
;	0b11111,
;	0b11111
;};
;//заряд много
;
;
;void define_char(byte flash *pc,byte char_code)
; 0000 0045 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0046   byte i,a;
; 0000 0047   a=(char_code<<3)|0x40;
;PCODE: $0000000F VOL: 0
;	*pc -> Y+3
;	char_code -> Y+2
;	i -> R17
;	a -> R16
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0048   for (i=0; i<8; i++) lcd_write_byte(a++,*pc++);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0049 }
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;
;unsigned char EncoderScan(unsigned char a)
; 0000 004C {
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 004D     if (PINB.1==0)
;	a -> Y+0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 004E     {
; 0000 004F         while (PINB.1==0) {}
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0050         while (PINB.2==0) {}
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0051         if ((PINB.2==1) && (PINB.1==1)) a++;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0052     }
;PCODE: $0000004D VOL: 0
; 0000 0053 
; 0000 0054      if (PINB.2==0)
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0055     {
; 0000 0056         while (PINB.2==0) {}
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0057         while (PINB.1==0) {}
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0058         if ((PINB.2==1) && (PINB.1==1)) a--;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0059     }
;PCODE: $0000006B VOL: 0
; 0000 005A     return a;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 005B }
;PCODE: $00000070 VOL: 0
;//обработка энкодера
;
;void write(void)
; 0000 005F {
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0060    lcd_clear();
;PCODE: $00000073 VOL: 0
; 0000 0061    lcd_gotoxy(4,0);
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0062    lcd_putchar(chis[hour/10]);
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0063    lcd_gotoxy(5,0);
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0064    lcd_putchar(chis[hour%10]);
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0065    lcd_gotoxy(6,0);
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0066    lcd_puts(":");
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0067    lcd_gotoxy(7,0);
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0068    lcd_putchar(chis[min/10]);
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0069    lcd_gotoxy(8,0);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 006A    lcd_putchar(chis[min%10]);
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 006B    lcd_gotoxy(9,0);
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 006C    lcd_puts(":");
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 006D    lcd_gotoxy(10,0);
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 006E    lcd_putchar(chis[sec/10]);
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 006F    lcd_gotoxy(11,0);
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0070    lcd_putchar(chis[sec%10]);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 0071    lcd_gotoxy(0,1);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 0072    lcd_putsf(dday[ukd]);
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 0073    if (menustart) {
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 0074      lcd_gotoxy(15,0);
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 0075      lcd_putchar(chis[menu%10]); }
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 0076    lcd_gotoxy(15,1);
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 0077    lcd_putchar(charge);
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 0078    //wait();
; 0000 0079 }
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0

	.DSEG
_0x1C:
	.BYTE 0x4
;// основной вывод на дисплей
;
;void write2(void)
; 0000 007D {

	.CSEG
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 007E    lcd_clear();
;PCODE: $000000FD VOL: 0
; 0000 007F    lcd_gotoxy(6,0);
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 0080    lcd_putchar(chis[hour1/10]);
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 0081    lcd_gotoxy(7,0);
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 0082    lcd_putchar(chis[hour1%10]);
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 0083    lcd_gotoxy(8,0);
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 0084    lcd_puts(":");
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 0085    lcd_gotoxy(9,0);
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 0086    lcd_putchar(chis[min1/10]);
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 0087    lcd_gotoxy(10,0);
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 0088    lcd_putchar(chis[min1%10]);
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 0089    lcd_gotoxy(15,0);
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 008A    lcd_putchar(chis[menu%10]);
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 008B    lcd_gotoxy(0,1);
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 008C    lcd_putsf(dday[ukd1]);
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 008D    lcd_gotoxy(10,1);
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 008E    if (clockon) lcd_putsf("ON");
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 008F    else  lcd_putsf("OFF");
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 0090    lcd_gotoxy(15,1);
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 0091    lcd_putchar(charge);
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 0092 }
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0

	.DSEG
_0x1E:
	.BYTE 0x2
;// вывод в режиме настройки будильника
;interrupt [2] void customization(void)
; 0000 0095 {

	.CSEG
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 0096     if (light)
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 0097     { light=0; timelight=sec+time_backlight;
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 0098       if (timelight>=60) timelight-=60;
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 0099       goto m1; }
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 009A     else
;PCODE: $00000185 VOL: 0
; 0000 009B     {
; 0000 009C       if (on) { clockon=0; goto m1; }
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 009D       #asm("cli")
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
	cli
;PCODE: $0000018F VOL: 0
; 0000 009E       menu=0; menustart=1;
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 009F       MCUCR=0b00000000;
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
; 0000 00A0       GICR=0b00000000;
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
; 0000 00A1       write();
;PCODE: $00000198 VOL: 0
; 0000 00A2       while(menu!=9)
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 00A3       {
; 0000 00A4         while (PINB.1==PINB.2)
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 00A5         {
; 0000 00A6           if (PIND.2==0)
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0000 00A7            {
; 0000 00A8             while (PIND.2==0) {}
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0000 00A9             menu++;
;PCODE: $000001AD VOL: 0
; 0000 00AA             if (menu==2) #asm("sei")
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
	sei
;PCODE: $000001B2 VOL: 0
; 0000 00AB             if (menu==5) show=0;
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 00AC             if (menu<=4) write();
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 00AD             else write2();
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 00AE             if (menu>=9) goto m1;
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0000 00AF            }
;PCODE: $000001C7 VOL: 0
; 0000 00B0         }
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 00B1             switch (menu)
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0000 00B2             {
; 0000 00B3               case 1:
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 00B4                {
; 0000 00B5                  sec=EncoderScan(sec);
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
; 0000 00B6                  if (sec>=60) sec=0; write();
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 00B7                  break;
;PCODE: $000001D8 VOL: 0
; 0000 00B8                }
; 0000 00B9               case 2:
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0000 00BA                {
; 0000 00BB                  min=EncoderScan(min);
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0000 00BC                  if (min>=60) min=0; write();
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0000 00BD                  break;
;PCODE: $000001E5 VOL: 0
; 0000 00BE                }
; 0000 00BF               case 3:
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
; 0000 00C0                {
; 0000 00C1                  hour=EncoderScan(hour);
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
; 0000 00C2                  if (hour>=24) hour=0; write();
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0000 00C3                  break;
;PCODE: $000001F2 VOL: 0
; 0000 00C4                }
; 0000 00C5               case 4:
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
; 0000 00C6                {
; 0000 00C7                  ukd=EncoderScan(ukd);
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
; 0000 00C8                  if (ukd>=7) ukd=0; write();
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 00C9                  break;
;PCODE: $000001FF VOL: 0
; 0000 00CA                }
; 0000 00CB               case 5:
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0000 00CC                {
; 0000 00CD                  min1=EncoderScan(min1);
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 00CE                  if (min1>=60) min1=0; write2();
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
; 0000 00CF                  break;
;PCODE: $0000020C VOL: 0
; 0000 00D0                }
; 0000 00D1               case 6:
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
; 0000 00D2                {
; 0000 00D3                  hour1=EncoderScan(hour1);
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 00D4                  if (hour1>=24) hour1=0; write2();
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
; 0000 00D5                  break;
;PCODE: $00000219 VOL: 0
; 0000 00D6                }
; 0000 00D7               case 7:
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 00D8                {
; 0000 00D9                  ukd1=EncoderScan(ukd1);
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
; 0000 00DA                  if (ukd1>=7) ukd1=0; write2();
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
; 0000 00DB                  break;
;PCODE: $00000226 VOL: 0
; 0000 00DC                }
; 0000 00DD               case 8:
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0000 00DE                {
; 0000 00DF                  clockon=EncoderScan(clockon);
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
; 0000 00E0                  write2();
;PCODE: $00000231 VOL: 0
; 0000 00E1                  break;
;PCODE: $00000232 VOL: 0
; 0000 00E2                }
; 0000 00E3             }
;PCODE: $00000233 VOL: 0
; 0000 00E4 
; 0000 00E5       }
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
; 0000 00E6       }
;PCODE: $00000236 VOL: 0
; 0000 00E7 m1:
;PCODE: $00000237 VOL: 0
; 0000 00E8     #asm("sei")
;PCODE: $00000238 VOL: 0
	sei
;PCODE: $00000239 VOL: 0
; 0000 00E9     MCUCR=0b00000010;
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
; 0000 00EA     GICR=0b01000000;
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
; 0000 00EB     menustart=0; show=1;
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
; 0000 00EC }
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;// обработка настройки времени и будильника
;
;interrupt [7] void time(void)
; 0000 00F0 {
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
; 0000 00F1       sec++;
;PCODE: $00000249 VOL: 0
; 0000 00F2       if(sec==60) {min++; sec=0;}
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0000 00F3       if (min==60) {hour++; min=0;}
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
; 0000 00F4       if (hour==24) {ukd++; hour=0;}
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0000 00F5       if (ukd==7) ukd=0;
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
; 0000 00F6       if (on)
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
; 0000 00F7       {
; 0000 00F8         if (TCCR2==0b00000000) TCCR2=0b00011111;
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
; 0000 00F9         else TCCR2=0b00000000;
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
; 0000 00FA       }
;PCODE: $0000026D VOL: 0
; 0000 00FB       else TCCR2=0b00000000;
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
; 0000 00FC       if (show) write();
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
; 0000 00FD }
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;// прерывание часов
;void main(void)
; 0000 0100 {
;PCODE: $0000027B VOL: 0
; 0000 0101 
; 0000 0102 PORTB=0b00000001;
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 0103 DDRB=0b00001001;
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
; 0000 0104 
; 0000 0105 PORTC=0x00;
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
; 0000 0106 DDRC=0x00;
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
; 0000 0107 
; 0000 0108 PORTD=0x00;
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
; 0000 0109 DDRD=0x00;
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
; 0000 010A 
; 0000 010B //TCCR0=0b00000101;     //3906 Hz
; 0000 010C 
; 0000 010D TCCR1A=0b00000000;
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
; 0000 010E TCCR1B=0b00001100;  //15625 Hz
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
; 0000 010F TIMSK=0b00010000;
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
; 0000 0110 OCR1A=15623;
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
; 0000 0111 
; 0000 0112 TCCR2=0b00000000;
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
; 0000 0113 OCR2=8;
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
; 0000 0114 
; 0000 0115 MCUCR=0b00000010;      //power-save mod 1011
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
; 0000 0116 GICR=0b01000000;
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
; 0000 0117 
; 0000 0118 ACSR=0x80;
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
; 0000 0119 
; 0000 011A ADCSRA=0b00000101;  // /32, режим однократных измерений
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
; 0000 011B ADMUX=0b01100101; //ADC5, старшие биты в ADCH, опорное - AVCC, C на AREF и GND
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
; 0000 011C 
; 0000 011D lcd_init(16);
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
; 0000 011E define_char(char0,0);
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
; 0000 011F define_char(char1,1);
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
; 0000 0120 define_char(char2,2);
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
; 0000 0121 #asm ("sei")
;PCODE: $000002B0 VOL: 0
	sei
;PCODE: $000002B1 VOL: 0
; 0000 0122 
; 0000 0123 while (1)
;PCODE: $000002B2 VOL: 0
; 0000 0124       {
; 0000 0125         //write();      //PORTB.0 - подсветка
; 0000 0126         if ((!light) && (sec!=timelight))  PORTB.0=0;
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
; 0000 0127         else { PORTB.0=1; light=1;}
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
; 0000 0128         if ((clockon==1) && (ukd1==ukd) && (hour1==hour) && (min1==min)) on=1;
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
; 0000 0129         else on=0;
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
; 0000 012A         if (sec%20==1) { ADCSRA.7=1; ADCSRA.6=1; }
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
; 0000 012B         if (ADCSRA.4==1)
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
; 0000 012C          {
; 0000 012D             if (ADCH<=183) { charge=0; on=1;} // U<3,49  (173)
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
; 0000 012E             if ((ADCH>183) && (ADCH<210)) { charge=1; on=0; }  // 3,49<U<4,05
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
; 0000 012F             if (ADCH>=210) {charge=2; on=0;}  // U>4,05         (200)
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
; 0000 0130             ADCSRA.7=0;
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
; 0000 0131          }
; 0000 0132       }
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
; 0000 0133 }
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
